name: ci
permissions:
  contents: write

on:
  push:
    branches:
      - main
    tags:
      - '*'
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      - ready_for_review

concurrency:
  group: '${{ github.workflow }}-${{ github.head_ref || github.run_id }}'
  cancel-in-progress: true

jobs:
  build:
    name: 'Build ${{ matrix.profile }} ${{ matrix.os }}-${{ matrix.arch }}'
    runs-on: ubuntu-24.04
    timeout-minutes: 240
    defaults:
      run:
        shell: bash

    strategy:
      matrix:
        include:
          - os: linux
            arch: x86_64
            job: test
            profile: release
          - os: linux
            arch: aarch64
            job: test
            profile: release

      fail-fast: false

    env:
      CARGO_TERM_COLOR: always
      RUST_BACKTRACE: full

    steps:
      - name: Configure Git
        run: |-
          git config --global core.symlinks true
          git config --global fetch.parallel 32

      - name: Clone Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 5
          submodules: false

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.arch }}-unknown-linux-gnu

      - name: Build Release
        run: |-
          cargo build --release --locked --all-targets
        env:
          CARGO_PROFILE_DEV_DEBUG: 0

      - name: Check Deno Binary
        run: 'target/release/deno eval "console.log(1+2)" | grep 3'
        env:
          NO_COLOR: 1

      - name: Prepare Release Artifacts
        run: |-
          cd target/release
          zip -r deno-${{ matrix.arch }}-linux.zip deno
          shasum -a 256 deno-${{ matrix.arch }}-linux.zip > deno-${{ matrix.arch }}-linux.zip.sha256sum
          strip denort
          zip -r denort-${{ matrix.arch }}-linux.zip denort
          shasum -a 256 denort-${{ matrix.arch }}-linux.zip > denort-${{ matrix.arch }}-linux.zip.sha256sum

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: 'deno-${{ matrix.os }}-${{ matrix.arch }}'
          path: target/release/deno-${{ matrix.arch }}-linux.zip

  release:
    name: Publish Release
    runs-on: ubuntu-24.04
    needs:
      - build
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Download Build Artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Upload Release to GitHub
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
        with:
          files: artifacts/**
          draft: false
